[
    /**********************
     * BracketHighlighter *
     **********************/

    // Toggle Global Enable
    {
        "keys": ["ctrl+alt+super+e"],
        "command": "bh_toggle_enable"
    },
    // Search to end of file for bracket
    {
        "keys": ["ctrl+alt+super+b"],
        "command": "bh_key",
        "args": {
            "lines": true
        }
    },
    // Go to left bracket
    {
        "keys": ["ctrl+alt+super+up"],
        "command": "bh_key",
        "args": {
            "no_outside_adj": true,
            "lines": true,
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {
                    "select": "left"
                }
            }
        }
    },
    // Go to right bracket
    {
        "keys": ["ctrl+alt+super+down"],
        "command": "bh_key",
        "args": {
            "no_outside_adj": true,
            "lines": true,
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {
                    "select": "right"
                }
            }
        }
    },
    // Remove brackets
    {
        "keys": ["ctrl+alt+super+r"],
        "command": "bh_remove_brackets"
    },
    // Toggle string escape mode for sub bracket search in strings
    {
        "keys": ["ctrl+alt+super+x"],
        "command": "bh_toggle_string_escape_mode"
    },
    // Select text between brackets
    {
        "no_outside_adj": true,
        "keys": ["ctrl+alt+super+s"],
        "command": "bh_key",
        "args": {
            "lines": true,
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect"
            }
        }
    },
    // Select text including brackets
    {
        "keys": ["ctrl+alt+super+d"],
        "command": "bh_key",
        "args": {
            "no_outside_adj": true,
            "lines": true,
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {
                    "always_include_brackets": true
                }
            }
        }
    },
    // Select tag name of HTML/XML tag (both opening name and closing)
    {
        "keys": ["ctrl+alt+super+t"],
        "command": "bh_key",
        "args": {
            "plugin": {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagnameselect"
            }
        }
    },
    // Select the attribute to the right of the cursor (will wrap inside the tag)
    {
        "keys": ["ctrl+alt+super+right"],
        "command": "bh_key",
        "args": {
            "plugin": {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagattrselect",
                "args": {
                    "direction": "right"
                }
            }
        }
    },
    // Select the attribute to the left of the cursor (will wrap inside the tag)
    {
        "keys": ["ctrl+alt+super+left"],
        "command": "bh_key",
        "args": {
            "plugin": {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagattrselect",
                "args": {
                    "direction": "left"
                }
            }
        }
    },
    // Convert single quote string to double quoted string and vice versa
    // Will handle escaping or unescaping quotes within the string
    {
        "keys": ["ctrl+alt+super+q"],
        "command": "bh_key",
        "args": {
            "lines": true,
            "plugin": {
                "type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"],
                "command": "bh_modules.swapquotes"
            }
        }
    },
    // Fold contents between brackets
    {
        "keys": ["ctrl+alt+super+["],
        "command": "bh_key",
        "args": {
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.foldbracket"
            }
        }
    },
    // Swap brackets with another type
    {
        "keys": ["ctrl+alt+super+e"],
        "command": "swap_brackets"
    },
    // Surround selection with brackets from quick panel
    {
        "keys": ["ctrl+alt+super+w"],
        "command": "wrap_brackets"
    },
    // Toggle high visibility mode
    {
        "keys": ["ctrl+alt+super+v"],
        "command": "bh_toggle_high_visibility"
    },

    /***********************
     * SideBarEnhancements *
     ***********************/

    {
        "keys": ["f12"],
        "command": "side_bar_open_in_browser",
        "args": {
            "paths": [],
            "type": "testing",
            "browser": ""
        }
    },
    {
        "keys": ["alt+f12"],
        "command": "side_bar_open_in_browser",
        "args": {
            "paths": [],
            "type": "production",
            "browser": ""
        }
    },

    /**************
     * SublimeSBT *
     **************/

    {
        "keys": ["ctrl+shift+o"],
        "command": "show_sbt"
    },
    {
        "keys": ["ctrl+alt+l"],
        "command": "list_sbt_errors"
    },
    {
        "keys": ["ctrl+alt+n"],
        "command": "next_sbt_error"
    },
    {
        "keys": ["ctrl+alt+o"],
        "command": "show_sbt_error_output"
    },
    {
        "keys": ["ctrl+alt+h"],
        "command": "sbt_show_history"
    },
    {
        "keys": ["ctrl+alt+shift+h"],
        "command": "sbt_show_history",
        "args": {
            "editable": true
        }
    },
    {
        "keys": ["enter"],
        "command": "sbt_submit",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+d"],
        "command": "sbt_eot",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["backspace"],
        "command": "sbt_delete_left",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["shift+backspace"],
        "command": "sbt_delete_left",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+shift+backspace"],
        "command": "sbt_delete_left",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+backspace"],
        "command": "sbt_delete_word_left",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["alt+backspace"],
        "command": "sbt_delete_word_left",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+alt+backspace"],
        "command": "sbt_delete_word_left",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["alt+shift+backspace"],
        "command": "sbt_delete_word_left",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+delete"],
        "command": "sbt_delete_word_right",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["alt+delete"],
        "command": "sbt_delete_word_right",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+alt+delete"],
        "command": "sbt_delete_word_right",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["alt+shift+delete"],
        "command": "sbt_delete_word_right",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["super+backspace"],
        "command": "sbt_delete_bol",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["super+shift+backspace"],
        "command": "sbt_delete_bol",
        "context": [{
            "key": "in_sbt_view"
        }]
    },

    // Disable keys that can modify the output
    {
        "keys": ["ctrl+alt+shift+backspace"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+x"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+shift+k"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["super+k", "super+backspace"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+super+up"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["ctrl+super+down"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["super+forward_slash"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["super+alt+forward_slash"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["super+j"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },
    {
        "keys": ["super+shift+d"],
        "command": "noop",
        "context": [{
            "key": "in_sbt_view"
        }]
    },

    /************************
     * HTML-CSS-JS Prettify *
     ************************/

    {
        "keys": ["super+shift+h"],
        "command": "htmlprettify"
    },
    {
        "keys": ["super+alt+h", "p"],
        "command": "htmlprettify_set_prettify_prefs"
    },
    {
        "keys": ["super+alt+h", "o"],
        "command": "htmlprettify_set_plugin_options"
    },
    {
        "keys": ["super+alt+h", "k"],
        "command": "htmlprettify_set_keyboard_shortcuts"
    },
    {
        "keys": ["super+alt+h", "n"],
        "command": "htmlprettify_set_node_path"
    },

    /*****************
     * SublimeLinter *
     *****************/

    {
        "keys": ["ctrl+super+l"],
        "command": "sublimelinter_lint"
    },
    {
        "keys": ["ctrl+super+e"],
        "command": "sublimelinter_goto_error",
        "args": {
            "direction": "next"
        }
    },
    {
        "keys": ["ctrl+super+shift+e"],
        "command": "sublimelinter_goto_error",
        "args": {
            "direction": "previous"
        }
    },
    {
        "keys": ["ctrl+super+a"],
        "command": "sublimelinter_show_all_errors"
    },

    /*******************
     * Trailing Spaces *
     *******************/

    {
        "keys": ["super+alt+backspace"],
        "command": "delete_trailing_spaces"
    },

    /*****************
     * SublimeScalex *
     *****************/

     {
        "keys": ["ctrl+super+alt+f"],
        "command": "sublime_scalex"
     },
     {
        "keys": ["super+alt+f"],
        "command": "show_panel",
        "args": {
            "panel": "replace",
            "reverse": false
        }
    },

    /***********
     * FixMyJs *
     ***********/

    {
        "keys": ["alt+super+j"],
        "command": "fix"
    }
]
